# coding: utf-8

from datetime import datetime
from elasticsearch import Elasticsearch
es = Elasticsearch()

"""doc = {
        'author': 'kimchy',
        'text': 'Elasticsearch: cool. bonsai cool.',
        'timestamp': datetime.now(),
                    }
res = es.index(index="test-index", doc_type='tweet', body=doc)
print(res['created'])

res = es.get(index="test-index", doc_type='tweet', id=1)
print(res['_source'])

es.indices.refresh(index="test-index")

res = es.search(index="test-index", body={"query": {"match_all": {}}})
print("Got %d Hits:" % res['hits']['total'])
for hit in res['hits']['hits']:
        print("%(timestamp)s %(author)s: %(text)s" % hit["_source"])
"""

"""
es.indices.delete(index='my_index', ignore=[400, 404])
"""
"""
es.indices.create(
    index="my_index",
    body={
	  "settings": {
	    "analysis": {
	      "char_filter": {
	        "my_mapping": {
	          "type": "mapping",
	          "mappings" : [
	            "a => α",
	            "b => β", 
	            "d => δ",
	            "e => ε",
	            "f => φ",
	            "g => γ",
	            "h => η",
	            "i => ι",
	            "k => κ",
	            "l => λ",
	            "m => μ",
	            "n => ν",
	            "o => ο",
	            "p => π",
	            "r => ρ",
	            "s => σ",
	            "t => τ",
	            "u => υ",
	            "v => β",
	            "w => ω",
	            "x => χ",
	            "y => υ",
	            "z => ζ",
	            "ks => ξ",
	            "ps => ψ",
	            "th => θ"
	          ]
	        }
	      },
	      "analyzer": {
	        "my_analyzer": {
	          "type": "custom", 
		  "char_filter": ["my_mapping"],
	          "tokenizer": "standard",
	          "filter": ["lowercase"]
	        }
	      }
	    }
	  },
	  "mappings": {
	    "book": {
	      "properties": {
	        "title": {
	          "type": "string",
	          "analyzer": "my_analyzer"
	        }
	      }
	    }
	  }
	},
    # Will ignore 400 errors, remove to ensure you're prompted
    ignore=400
)


doc1 = {
        'title': 'test',
        'text': 'bonsai cool.',
        'timestamp': datetime.now(),
}

res = es.index(index="my_index", doc_type='book', id=1, body=doc1)
print(res['created'])
res = es.get(index="my_index", doc_type='book', id=1)
print(res['_source'])

doc2 = {
        'title': 'τεστ',
        'text': 'bonsai cool.',
        'timestamp': datetime.now(),
}

res = es.index(index="my_index", doc_type='book', id=2, body=doc2)
print(res['created'])
res = es.get(index="my_index", doc_type='book', id=2)
print(res['_source'])
"""
doc3 = {
        'title': 'test for skks',
        'text': 'bonsai coolsdsd.',
        'timestamp': datetime.now(),
}

res = es.index(index="my_index", doc_type='book', id=3, body=doc3)
print(res['created'])
res = es.get(index="my_index", doc_type='book', id=3)
print(res['_source'])

print("\nsearching for test")
res = es.search(index="my_index", body={"query": {"match": {
      "title" : "test"
    }}})
print("Got %d Hits:" % res['hits']['total'])
for hit in res['hits']['hits']:
        #print("%(title)s %(text)s: %(timestamp)s" % hit["_source"])
	title_test = hit['_source']['title']
	print("troll\n")
	print title_test
	print("troll\n")
print("\n")



print("searching for τεστ")
res = es.search(index="my_index", body={"query": {"match": {
      "title" : "τεστ"
    }}})
print("Got %d Hits:" % res['hits']['total'])
for hit in res['hits']['hits']:
	pass       
	#print("%(title)s %(text)s: %(timestamp)s" % hit["_source"])
print("\n")

print("everything in the database:")
res = es.search(index="my_index", body={"query": {"match_all": {}}})
print("Got %d Hits:" % res['hits']['total'])
for hit in res['hits']['hits']:
        print("%(title)s %(text)s: %(timestamp)s" % hit["_source"])
